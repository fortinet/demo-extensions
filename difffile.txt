diff --git a/.gitignore b/.gitignore
index 00771c7..f55d26a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,7 +5,8 @@ terraform.tfvars
 terraform.tfstate
 terraform.tfstate.backup
 runInspector.py.rendered
-
+*.rendered
+*.bak
 # project-specific
 **/dist
 **/local
diff --git a/TEMP_Cert_1.pem b/TEMP_Cert_1.pem
new file mode 100644
index 0000000..641fceb
--- /dev/null
+++ b/TEMP_Cert_1.pem
@@ -0,0 +1,29 @@
+-----BEGIN CERTIFICATE-----
+MIIE4jCCA8qgAwIBAgIDB1LKMA0GCSqGSIb3DQEBCwUAMIGrMQswCQYDVQQGEwJV
+UzETMBEGA1UECBMKQ2FsaWZvcm5pYTESMBAGA1UEBxMJU3Vubnl2YWxlMREwDwYD
+VQQKEwhGb3J0aW5ldDEeMBwGA1UECxMVQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRsw
+GQYDVQQDExJmb3J0aW5ldC1zdWJjYTIwMDExIzAhBgkqhkiG9w0BCQEWFHN1cHBv
+cnRAZm9ydGluZXQuY29tMCAXDTE5MDgxNjIyMzk0MloYDzIwNTYwMTE5MDMxNDA3
+WjCBnTELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcT
+CVN1bm55dmFsZTERMA8GA1UEChMIRm9ydGluZXQxEjAQBgNVBAsTCUZvcnRpR2F0
+ZTEZMBcGA1UEAxMQRkdWTTAxVE0xOTAwNDQ1MjEjMCEGCSqGSIb3DQEJARYUc3Vw
+cG9ydEBmb3J0aW5ldC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
+AQCsBElTBuEXPSHysZFEAhfjTmzCV6cHAng92A74NVnNw7nPJ4ePPWxxIw9KbOIE
++fqGC53nMH9UGKGdDyXTV7DbC1TZDB0GvQUalxdpFTfAUaMz/FeQelrn7vxkGDU+
+6hX8NlJcl0aPb8lQTg5S31ItlFoArPbR9G5tFB/JpdzM+pTZGWiTA7NGO2DyYH3U
+kvlK8MPMmGlvdsitnE0WNuDTxAh1M5EY9fOx97TaKN/e4Kx6p3uDfLUVm2sjzCgW
+r121SEW5+R1SOEI1V7Vq7EdWWxn3nNQQvs0f+PlwkmyM4CeB2i2AMd7uVeSNxJG5
+5fpbBHr2sNVLqKFWeOG5fgM9AgMBAAGjggEXMIIBEzAdBgNVHQ4EFgQUWOs88eNM
+yGqCZW79makXO1DL3mEwgdMGA1UdIwSByzCByIAUmCslPDDKLCtW59v8WTOz3D1b
+atehgaukgagwgaUxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIw
+EAYDVQQHEwlTdW5ueXZhbGUxETAPBgNVBAoTCEZvcnRpbmV0MR4wHAYDVQQLExVD
+ZXJ0aWZpY2F0ZSBBdXRob3JpdHkxFTATBgNVBAMTDGZvcnRpbmV0LWNhMjEjMCEG
+CSqGSIb3DQEJARYUc3VwcG9ydEBmb3J0aW5ldC5jb22CAiABMAwGA1UdEwEB/wQC
+MAAwDgYDVR0PAQH/BAQDAgeAMA0GCSqGSIb3DQEBCwUAA4IBAQCLCTiImQqJfCGt
+jqUJVNSRz/V/pUi6ASOMWIZ4GL8RwFy/M/hi237hiOq7rOTQtSf+sorOGS1f+Y0s
+Ta+g1aR4nMK7hJHLrvhFP/j2nn/TDEE1oGWkUk41RFE6XmEnF+0O+CJSxSQk75Kf
+GMw4HbZbpTtcXKEhh+U5CJDYHksJl3+oibppPNUWoIZ3b8qW1BRHC6amrB8ngbnq
+5TlLLAgd59GzaeqJ0Zv0/GVc5fVT4Va5Gmz4TNiZYScbJgOcO4HnjydN4QedVtQH
+zn6djXEePkk5tfN9Bn49JzDTJInJaEOM1MbOf2gyDtZTzcDnby/jpm+JUgVq1oBv
+cp0ya7gs
+-----END CERTIFICATE-----
\ No newline at end of file
diff --git a/config_script b/config_script
index 31cd9ed..3d32d49 100644
--- a/config_script
+++ b/config_script
@@ -1,206 +1,26 @@
-config system global
-    set hostname "FortiDEMO_AWS"
-end
-config system admin
-        edit admin
-        set password "${admin_pass}"
-end
-config system interface
-    edit "port1"
+config system accprofile
+    edit "apiUser"
+        set secfabgrp read-write
+        set ftviewgrp read-write
+        set authgrp read-write
+        set sysgrp read-write
+        set netgrp read-write
+        set loggrp read-write
+        set fwgrp read-write
+        set vpngrp read-write
+        set utmgrp read-write
+        set wanoptgrp read-write
+        set wifi read-write
+    next
+end
+config system api-user
+    edit "root"
+        set accprofile "apiUser"
         set vdom "root"
-        set mode dhcp
-        set allowaccess ping https ssh fgfm
-    next
-    edit "port2"
-        set vdom "root"
-        set mode dhcp
-        set allowaccess ping ssh
-        set scan-botnet-connections monitor
-        set device-identification enable
-        set defaultgw disable
-    next
-end
-config firewall vip
-    edit "ToUbuntuVIP"
-        set comment "VIP to Ubuntu"
-        set extintf "port1"
-        set portforward enable
-        set mappedip "${ubuntu_instance_ip}"
-        set extport 22
-        set mappedport 22
-    next
-end
-config firewall address
-    edit "FortiDEMO_local_subnet_1"
-        set allow-routing enable
-        set subnet 10.0.1.0 255.255.255.0
-    next
-    edit "FortiDEMO_remote_subnet_1"
-        set allow-routing enable
-        set subnet 10.100.88.0 255.255.255.0
+        config trusthost
+            edit 1
+                set ipv4-trusthost "${ubuntu_instance_ip}" 255.255.255.0
+            next
+        end
     next
-end
-config firewall addrgrp
-    edit "FortiDEMO_local"
-        set member "FortiDEMO_local_subnet_1"
-        set allow-routing enable
-    next
-    edit "FortiDEMO_remote"
-        set member "FortiDEMO_remote_subnet_1"
-        set allow-routing enable
-    next
-end
-config vpn ipsec phase1-interface
-    edit "FortiDEMO"
-        set interface "port1"
-        set peertype any
-        set net-device enable
-        set proposal aes128-sha256 aes256-sha256 aes128-sha1 aes256-sha1
-        set wizard-type static-fortigate
-        set remote-gw "${forti_demo_ip}"
-        set psksecret fortidemo
-    next
-end
-config vpn ipsec phase2-interface
-    edit "FortiDEMO"
-        set phase1name "FortiDEMO"
-        set proposal aes128-sha1 aes256-sha1 aes128-sha256 aes256-sha256 aes128gcm aes256gcm chacha20poly1305
-        set src-addr-type name
-        set dst-addr-type name
-        set src-name "FortiDEMO_local"
-        set dst-name "FortiDEMO_remote"
-    next
-end
-config firewall policy
-    edit 0
-        set name "vpn_FortiDEMO_local"
-        set srcintf "port1"
-        set dstintf "FortiDEMO"
-        set srcaddr "FortiDEMO_local"
-        set dstaddr "FortiDEMO_remote"
-        set action accept
-        set schedule "always"
-        set service "ALL"
-    next
-    edit 0
-        set name "vpn_FortiDEMO_remote"
-        set srcintf "FortiDEMO"
-        set dstintf "port1"
-        set srcaddr "FortiDEMO_remote"
-        set dstaddr "FortiDEMO_local"
-        set action accept
-        set schedule "always"
-        set service "ALL"
-    next
-end
-config router static
-    edit 1
-        set device "FortiDEMO"
-        set dstaddr "FortiDEMO_remote"
-    next
-    edit 2
-        set distance 254
-        set blackhole enable
-        set dstaddr "FortiDEMO_remote"
-    next
-end
-
-config firewall policy
-    edit 1
-        set srcintf "port1"
-        set dstintf "port1"
-        set srcaddr "all"
-        set dstaddr "all"
-        set action accept
-        set schedule "always"
-        set service "ALL"
-        set nat enable
-    next
-    edit 3
-        set name "ToUbuntu"
-        set srcintf "port1"
-        set dstintf "port2"
-        set srcaddr "all"
-        set dstaddr "ToUbuntuVIP"
-        set action accept
-        set schedule "always"
-        set service "HTTP" "SSH"
-        set utm-status enable
-        set fixedport enable
-        set fsso disable
-        set av-profile "default"
-        set ssl-ssh-profile "certificate-inspection"
-        set nat enable
-    next
-    edit 4
-        set name "UbuntuEgress"
-        set srcintf "port2"
-        set dstintf "port1"
-        set srcaddr "all"
-        set dstaddr "all"
-        set action accept
-        set schedule "always"
-        set service "ALL"
-        set utm-status enable
-        set fsso disable
-        set av-profile "default"
-        set ssl-ssh-profile "certificate-inspection"
-        set nat enable
-    next
-end
-config vpn certificate remote
-    edit "TEMP_Cert_1"
-        set remote "-----BEGIN CERTIFICATE-----
-MIIE4jCCA8qgAwIBAgIDB1LKMA0GCSqGSIb3DQEBCwUAMIGrMQswCQYDVQQGEwJV
-UzETMBEGA1UECBMKQ2FsaWZvcm5pYTESMBAGA1UEBxMJU3Vubnl2YWxlMREwDwYD
-VQQKEwhGb3J0aW5ldDEeMBwGA1UECxMVQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRsw
-GQYDVQQDExJmb3J0aW5ldC1zdWJjYTIwMDExIzAhBgkqhkiG9w0BCQEWFHN1cHBv
-cnRAZm9ydGluZXQuY29tMCAXDTE5MDgxNjIyMzk0MloYDzIwNTYwMTE5MDMxNDA3
-WjCBnTELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcT
-CVN1bm55dmFsZTERMA8GA1UEChMIRm9ydGluZXQxEjAQBgNVBAsTCUZvcnRpR2F0
-ZTEZMBcGA1UEAxMQRkdWTTAxVE0xOTAwNDQ1MjEjMCEGCSqGSIb3DQEJARYUc3Vw
-cG9ydEBmb3J0aW5ldC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
-AQCsBElTBuEXPSHysZFEAhfjTmzCV6cHAng92A74NVnNw7nPJ4ePPWxxIw9KbOIE
-+fqGC53nMH9UGKGdDyXTV7DbC1TZDB0GvQUalxdpFTfAUaMz/FeQelrn7vxkGDU+
-6hX8NlJcl0aPb8lQTg5S31ItlFoArPbR9G5tFB/JpdzM+pTZGWiTA7NGO2DyYH3U
-kvlK8MPMmGlvdsitnE0WNuDTxAh1M5EY9fOx97TaKN/e4Kx6p3uDfLUVm2sjzCgW
-r121SEW5+R1SOEI1V7Vq7EdWWxn3nNQQvs0f+PlwkmyM4CeB2i2AMd7uVeSNxJG5
-5fpbBHr2sNVLqKFWeOG5fgM9AgMBAAGjggEXMIIBEzAdBgNVHQ4EFgQUWOs88eNM
-yGqCZW79makXO1DL3mEwgdMGA1UdIwSByzCByIAUmCslPDDKLCtW59v8WTOz3D1b
-atehgaukgagwgaUxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIw
-EAYDVQQHEwlTdW5ueXZhbGUxETAPBgNVBAoTCEZvcnRpbmV0MR4wHAYDVQQLExVD
-ZXJ0aWZpY2F0ZSBBdXRob3JpdHkxFTATBgNVBAMTDGZvcnRpbmV0LWNhMjEjMCEG
-CSqGSIb3DQEJARYUc3VwcG9ydEBmb3J0aW5ldC5jb22CAiABMAwGA1UdEwEB/wQC
-MAAwDgYDVR0PAQH/BAQDAgeAMA0GCSqGSIb3DQEBCwUAA4IBAQCLCTiImQqJfCGt
-jqUJVNSRz/V/pUi6ASOMWIZ4GL8RwFy/M/hi237hiOq7rOTQtSf+sorOGS1f+Y0s
-Ta+g1aR4nMK7hJHLrvhFP/j2nn/TDEE1oGWkUk41RFE6XmEnF+0O+CJSxSQk75Kf
-GMw4HbZbpTtcXKEhh+U5CJDYHksJl3+oibppPNUWoIZ3b8qW1BRHC6amrB8ngbnq
-5TlLLAgd59GzaeqJ0Zv0/GVc5fVT4Va5Gmz4TNiZYScbJgOcO4HnjydN4QedVtQH
-zn6djXEePkk5tfN9Bn49JzDTJInJaEOM1MbOf2gyDtZTzcDnby/jpm+JUgVq1oBv
-cp0ya7gs
------END CERTIFICATE-----"
-    next
-end
-config system saml
-    set status enable
-    set role service-provider
-    set idp-entity-id "http://2.2.2.2:10403/saml-idp/csf_s3n6f2jbdvf2mecjd0qtau9qdrlg02x/metadata/"
-    set idp-single-sign-on-url "https://2.2.2.2:10403/saml-idp/csf_s3n6f2jbdvf2mecjd0qtau9qdrlg02x/login/"
-    set idp-single-logout-url "https://2.2.2.2:10403/saml-idp/csf_s3n6f2jbdvf2mecjd0qtau9qdrlg02x/logout/"
-    set default-login-page normal
-    set default-profile "super_admin"
-    set idp-cert "TEMP_Cert_1"
-    set server-address "${aws_eip}":443
-end
-config system csf
-    set status enable
-    set upstream-ip 10.100.88.1
-    set management-ip "${aws_eip}"
-    set management-port 443
-end
-config system sdn-connector
-    edit "aws_sdn"
-        set type aws
-        set use-metadata-iam enable
-    next
-end
+end
\ No newline at end of file
diff --git a/get-external-ip.sh b/get-external-ip.sh
new file mode 100644
index 0000000..fd2431c
--- /dev/null
+++ b/get-external-ip.sh
@@ -0,0 +1,3 @@
+ #!/bin/bash
+curldata=`curl https://ifconfig.co/`
+echo "{\"ipAddress\":\"${curldata}\"}"
\ No newline at end of file
diff --git a/main.tf b/main.tf
index dba6f45..dfe8425 100644
--- a/main.tf
+++ b/main.tf
@@ -3,23 +3,46 @@ provider "aws" {
   access_key = var.access_key
   secret_key = var.secret_key
   region     = var.region
+
 }
-variable "region" {
-  type    = string
-  default = "us-west-1" //Default Region
+terraform {
+  required_providers {
+    fortios = {
+      source = "fortinetdev/fortios"
+      version = "1.7.0"
+    }
+  }
+}
+
 
+data "external" "external_ip" {
+  program = ["bash"  , "get-external-ip.sh"]
+}
+data "external" "setup_api_key" {
+  depends_on =[local_file.setup_token]
+  program = ["bash"  , "./run-set-api-key.sh"]
 }
-data "aws_caller_identity" "current" {}
 
-variable "access_key" {
-  type    = string
-  default = ""
+data "template_file" "setup_token" {
+
+  template = "${file("./set-api-key.sh")}"
+  vars = {
+    fortigate_Ip       = aws_eip.fortigate_eip.public_ip,
+  }
 }
-variable "secret_key" {
-  type    = string
-  default = ""
+resource "local_file" "setup_token" {
+  content  = data.template_file.setup_token.rendered
+  filename = "${path.module}/set-api-key.sh.rendered"
 }
 
+provider "fortios" {
+  hostname = aws_eip.fortigate_eip.public_ip
+  token    = "${data.external.setup_api_key.result}"
+  insecure = "true"
+}
+
+data "aws_caller_identity" "current" {}
+
 variable "key_name" {
   type    = string
   default = "id_rsa.pub"
@@ -40,10 +63,6 @@ variable "fortidemo_ip" {
   type    = string
   default = ""
 }
-variable "admin_pass" {
-  type    = string
-  default = "SecurityFabric"
-}
 variable "cluster_name" {
   type    = string
   default = "fortidemo" //Must be lowercase for s3
@@ -60,6 +79,18 @@ data "template_file" "setup-nat-eip" {
   }
 }
 
+resource "null_resource" "test_instance_is_up" {
+  provisioner "remote-exec" {
+    connection {
+      host = aws_eip.fortigate_eip.public_ip
+      user = "admin"
+
+    }
+  }
+}
+
+
+
 data "template_file" "setup-inspector-run" {
   template = "${file("./runInspector.py")}"
   vars = {
@@ -449,6 +480,7 @@ resource "aws_instance" "fortigate" {
   availability_zone      = var.az_default
   instance_type          = "c4.large"
   subnet_id              = aws_subnet.main.id
+  key_name               = aws_key_pair.keypair.key_name
   vpc_security_group_ids = [aws_security_group.allow_all.id]
   user_data              = data.template_file.setup-nat-eip.rendered
   tags = {
@@ -472,7 +504,6 @@ resource "aws_eip_association" "eip_association" {
 
 }
 
-
 //Setup the Inspector
 //specify the tags to look at
 //Do not call env from instance to avoid cyclical condition
@@ -508,3 +539,9 @@ output "InstanceName" {
 output "PrivateIP" {
   value = aws_network_interface.fgt_second_nic.private_ip
 }
+output "data"{
+  value = data.external.external_ip.result
+}
+output "token"{
+  value = data.external.setup_api_key.result
+}
\ No newline at end of file
diff --git a/provider.tf b/provider.tf
new file mode 100644
index 0000000..1e7a951
--- /dev/null
+++ b/provider.tf
@@ -0,0 +1,310 @@
+#Provider Information
+
+
+#Hostname
+resource "fortios_system_global" "hostname" {
+  hostname  = "FortiDEMO_AWS"
+}
+
+#Administrator
+resource "fortios_system_admin" "administrator" {
+  name = "cloudadmin"
+  password = "${var.admin_pass}"
+}
+
+#Interface
+resource "fortios_system_interface" "interfaces" {
+  name         = "port1"
+  vdom         = "root"
+  mode         = "dhcp"
+  allowaccess  = "ping https ssh fgfm"
+  description  = "Created by Terraform Provider for FortiOS"
+}
+
+resource "fortios_system_interface" "port2" {
+  name                    = "port2"
+  vdom                    = "root"
+  mode                    = "dhcp"
+  allowaccess             = "ping ssh"
+  description             = "Created by Terraform Provider for FortiOS"
+  defaultgw               = "disable"
+  device_identification   = "enable"
+  scan_botnet_connections = "enable"
+ }
+
+#Firewall Settings - VIP
+resource "fortios_firewall_vip" "toUbunutuVIP" {
+  name = "toUbunutuVIP"
+  comment = "VIP to Ubuntu"
+  extintf = "port1"
+  portforward = "enable"
+  extport = "22"
+  mappedport = "22"
+
+  mappedip {
+    range = "${var.ubuntu_instance_ip}"
+  }
+}
+
+#Firewall Addresses
+resource "fortios_firewall_address" "local" {
+  name = "Fortidemo_local_subnet_1"
+  allow_routing = "enable"
+  subnet = "10.0.1.0 255.255.255.0"
+}
+
+resource "fortios_firewall_address" "remote" {
+  name = "FortiDEMO_remote_subnet_1"
+  allow_routing = "enable"
+  subnet = "10.100.88.0 255.255.255.0"
+}
+
+#Firewall Address Groups
+resource "fortios_firewall_addrgrp" "local" {
+  name = "FortiDEMO_local"
+  member {
+    name = "FortiDEMO_local_subnet_1"
+    }
+  allow_routing = "enable"
+  visibility = "enable"
+}
+
+resource "fortios_firewall_addrgrp" "remote" {
+  name = "FortiDEMO_remote"
+  member {
+    name = "FortiDEMO_remote_subnet_1"
+  }
+  allow_routing = "enable"
+  visibility = "enable"
+}
+
+#VPN IPsec phase1-interface
+resource "fortios_vpnipsec_phase1interface" "FortiDEMOphase1" {
+  name = "FortiDEMOphase1"
+  interface = "port1"
+  peertype = "any"
+  net_device = "enable"
+  proposal = "aes128-sha256 aes256-sha256 aes128-sha1 aes256-sha1"
+  wizard_type = "static-fortigate"
+  remote_gw = "${var.fortidemo_ip}"
+  psksecret = "fortidemo"
+}
+
+#VPN IPsec phase2-interface
+resource "fortios_vpnipsec_phase2interface" "FortiDEMOphase2" {
+  name = "FortiDEMOphase2"
+  phase1name = "FortiDEMOphase2"
+  proposal = "aes128-sha1 aes256-sha1 aes128-sha256 aes256-sha256 aes128gcm aes256gcm chacha20poly1305"
+  src_addr_type = "name"
+  dst_addr_type = "name"
+  src_name = "FortiDEMO_local"
+  dst_name = "FortiDEMO_remote"
+ }
+
+#VPN Firewall Policies
+resource "fortios_firewall_policy" "vpnpolicy1" {
+  policyid = 1
+  name = "vpn_FortiDEMO_local"
+  action = "accept"
+  nat = "enable"
+  schedule = "always"
+
+  srcintf {
+    name = "port1"
+  }
+
+  dstintf {
+    name = "FortiDemo"
+  }
+
+  srcaddr {
+    name = "FortiDEMO_local"
+  }
+
+  dstaddr {
+    name = "FortiDEMO_remote"
+  }
+
+  service {
+    name = "ALL"
+  }
+
+}
+
+resource "fortios_firewall_policy" "vpnpolicy2" {
+  policyid = 2
+  name = "vpn_FortiDEMO_remote"
+  action = "accept"
+  nat = "enable"
+  schedule = "always"
+
+  srcintf {
+    name = "FortiDEMO"
+  }
+
+  dstintf {
+    name = "port1"
+  }
+
+  srcaddr {
+    name = "FortiDEMO_remote"
+  }
+
+  dstaddr {
+    name = "FortiDEMO_local"
+  }
+
+  service {
+    name = "ALL"
+  }
+}
+
+#Router Configuration
+resource "fortios_router_static" "Access" {
+  dst = "0.0.0.0 0.0.0.0"
+  device = "FortiDEMO"
+  dstaddr = "FortiDEMO_remote" 
+  seq_num = 1
+}
+
+resource "fortios_router_static" "blackhole" {
+  dst = "0.0.0.0 0.0.0.0"
+  blackhole = "enable"
+  distance = 254
+  dstaddr = "FortiDEMO_remote"
+  seq_num = 2
+}
+
+#Firewall Policies
+resource "fortios_firewall_policy" "policy1" {
+  policyid = 3
+  name = "port1 to port1"
+  action = "accept"
+  nat = "enable"
+  schedule = "always"
+
+  srcintf {
+    name = "port1"
+  }
+
+  dstintf {
+    name = "port1"
+  }
+
+  srcaddr {
+    name = "all"
+  }
+
+  dstaddr {
+    name = "all"
+  }
+
+  service {
+    name = "ALL"
+  }
+}
+
+resource "fortios_firewall_policy" "policy2" {
+  policyid = 4
+  name = "ToUbuntu"
+  action = "accept"
+  nat = "enable"
+  schedule = "always"
+  utm_status = "enable"
+  fixedport = "enable"
+  fsso = "enable"
+  av_profile = "default"
+  ssl_ssh_profile = "certificate-inspection"
+
+  srcintf {
+    name = "port1"
+  }
+
+  dstintf {
+    name = "port2"
+  }
+
+  srcaddr {
+    name = "all"
+  }
+
+  dstaddr {
+    name = "ToUbuntuVIP"
+  }
+
+  service {
+    name = "HTTP"
+  }
+
+  service {
+    name = "SSH"
+  }
+}
+
+resource "fortios_firewall_policy" "policy3" {
+  policyid = 5
+  name = "UbuntuEgress"
+  action = "accept"
+  nat = "enable"
+  schedule = "always"
+  utm_status = "enable"
+  fixedport = "enable"
+  fsso = "disable"
+  av_profile = "default"
+  ssl_ssh_profile = "certificate-inspection"
+
+  srcintf {
+    name = "port2"
+  }
+
+  dstintf {
+    name = "port1"
+  }
+ 
+  srcaddr {
+    name = "all"
+  }
+
+  dstaddr {
+    name = "all"
+  }
+
+  service {
+    name = "ALL"
+  }
+}
+
+#VPN Certificate Remote
+resource "fortios_vpncertificate_remote" "TEMP_Cert_1" {
+  name = "TEMP_Cert_1"
+  remote = var.temp_cert
+}
+
+#SAML Settings
+resource "fortios_system_saml" "SAML" {
+  status = "enable"
+  role = "service-provider"
+  idp_entity_id = "http://2.2.2.2:10403/saml-idp/csf_s3n6f2jbdvf2mecjd0qtau9qdrlg02x/metadata/"
+  idp_single_sign_on_url = "https://2.2.2.2:10403/saml-idp/csf_s3n6f2jbdvf2mecjd0qtau9qdrlg02x/login/"
+  idp_single_logout_url = "https://2.2.2.2:10403/saml-idp/csf_s3n6f2jbdvf2mecjd0qtau9qdrlg02x/logout/"
+  default_login_page = "normal"
+  default_profile = "super_admin"
+  idp_cert = "TEMP_Cert_1"
+  server_address = "'${var.aws_eip}':443"
+}
+
+#CSF Settings
+resource "fortios_system_csf" "csfSettings" {
+  status = "enable"
+  upstream_ip = "10.100.88.1"
+  management_ip = "${var.aws_eip}"
+  management_port = 443
+}
+
+#SDN Connector
+resource "fortios_system_sdnconnector" "awsSdn" {
+  name = "awsSDN"
+  status = "enable"
+  type = "aws"
+  use_metadata_iam = "enable"
+}
diff --git a/run-set-api-key.sh b/run-set-api-key.sh
new file mode 100644
index 0000000..6aa8185
--- /dev/null
+++ b/run-set-api-key.sh
@@ -0,0 +1,7 @@
+#!/bin/bash
+#Runs the set-api-key and returns JSON as expected by terraform.
+# We anticipate getting set-ap-key.sh.rendered.
+
+value=`expect set-api-key.sh.rendered | grep 'New API key:' | awk 'NF>1{print $NF}' | tr -d '\r'`
+
+echo "{\"token\":\"${value}\"}"
\ No newline at end of file
diff --git a/set-api-key.sh b/set-api-key.sh
new file mode 100755
index 0000000..0502186
--- /dev/null
+++ b/set-api-key.sh
@@ -0,0 +1,7 @@
+spawn ssh admin@${fortigate_Ip}
+expect "? "
+send "yes\r"
+expect "# "
+
+send "execute api-user generate-key root \r"
+expect "New API key:"
diff --git a/vars.tf b/vars.tf
new file mode 100644
index 0000000..672c5a6
--- /dev/null
+++ b/vars.tf
@@ -0,0 +1,50 @@
+//AWS Configuration
+variable access_key {
+    type = string
+    default = ""
+}
+
+variable secret_key {
+    type = string
+    default = ""
+}
+
+variable "region" {
+  type = string
+  default = "us-west-1"
+}
+
+// Availability zones for the region
+variable "az1" {
+  type = string
+  default = "us-west-1a"
+}
+
+variable "az2" {
+  type = string
+  default = "us-west-1b"
+}
+
+// AWS EIP
+variable "aws_eip" {
+  type = string
+  default = "aws_eip.fortigate_eip.public_ip"
+}
+
+//Ubuntu Instance IP address
+variable "ubuntu_instance_ip" {
+  type = string
+  default = "10.0.2.100"
+}
+
+//User Admin Password
+variable "admin_pass" {
+  type  = string
+  default = "Password1!"
+}
+
+// Certificate File
+variable "temp_cert"{
+    type = string
+    default = "TEMP_Cert_1.pem"
+}
\ No newline at end of file
